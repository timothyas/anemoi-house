activation: GELU
num_channels: 1024
cpu_offload: False
output_mask: null

model:
  _target_: anemoi.models.models.encoder_processor_decoder.AnemoiModelEncProcDec

# LayerKernels are optionally. If not specified, the default are pytorch.nn.LayerNorm and torch.nn.Linear.
layer_kernels:
  processor:
    LayerNorm:
      _target_: torch.nn.LayerNorm
      _partial_: True
      #Any arguments to your chosen function go here
    Linear:
      _target_: torch.nn.Linear
      _partial_: True
      #Any arguments to your chosen function go here
    QueryNorm:
      _target_: anemoi.models.layers.normalization.AutocastLayerNorm
      _partial_: True
      bias: False
      #Any arguments to your chosen function go here
    KeyNorm:
      _target_: anemoi.models.layers.normalization.AutocastLayerNorm
      _partial_: True
      bias: False
      #Any arguments to your chosen function go here
  encoder:
    LayerNorm:
      _target_: torch.nn.LayerNorm
      _partial_: True
      #Any arguments to your chosen function go here
    Linear:
      _target_: torch.nn.Linear
      _partial_: True
      #Any arguments to your chosen function go here
  decoder:
    LayerNorm:
      _target_: torch.nn.LayerNorm
      _partial_: True
      #Any arguments to your chosen function go here e.g.
    Linear:
      _target_: torch.nn.Linear
      _partial_: True
      #Any arguments to your chosen function go here e.g.

processor:
  _target_: anemoi.models.layers.processor.TransformerProcessor
  activation: ${model.activation}
  num_layers: 16
  num_chunks: 2
  mlp_hidden_ratio: 4 # GraphTransformer or Transformer only
  num_heads: 16 # GraphTransformer or Transformer only
  window_size: 512
  dropout_p: 0.0 # GraphTransformer
  attention_implementation: flash_attention # flash_attention, scaled_dot_product_attention
  qk_norm: False # Transformer and GraphTransformer only
  softcap: 0.0 # Transformer only
  use_alibi_slopes: False # Transformer only
  cpu_offload: ${model.cpu_offload}


encoder:
  _target_: anemoi.models.layers.mapper.GraphTransformerForwardMapper
  trainable_size: ${model.trainable_parameters.data2hidden}
  sub_graph_edge_attributes: ${model.attributes.edges}
  activation: ${model.activation}
  num_chunks: 1
  mlp_hidden_ratio: 4 # GraphTransformer or Transformer only
  num_heads: 16 # GraphTransformer or Transformer only
  qk_norm: False
  cpu_offload: ${model.cpu_offload}


decoder:
  _target_: anemoi.models.layers.mapper.GraphTransformerBackwardMapper
  trainable_size: ${model.trainable_parameters.hidden2data}
  sub_graph_edge_attributes: ${model.attributes.edges}
  activation: ${model.activation}
  num_chunks: 1
  mlp_hidden_ratio: 4 # GraphTransformer or Transformer only
  num_heads: 16 # GraphTransformer or Transformer only
  initialise_data_extractor_zero: False
  qk_norm: False
  cpu_offload: ${model.cpu_offload}


trainable_parameters:
  data: 8
  hidden: 8
  data2hidden: 8
  hidden2data: 8


attributes:
  edges:
  - edge_length
  - edge_dirs
  nodes: []

# Bounding configuration
bounding:

  # Bound total_precipitation with a Relu bounding layer
  # ensuring a range of [0, infinity) to avoid negative precipitation values.
  - _target_: anemoi.models.layers.bounding.ReluBounding #[0, infinity)
    variables:
    - spfh2m
    - spfh_25
    - spfh_75
    - spfh_125
    - spfh_175
    - spfh_225
    - spfh_275
    - spfh_325
    - spfh_375
    - spfh_425
    - spfh_475
    - spfh_525
    - spfh_575
    - spfh_625
    - spfh_675
    - spfh_725
    - spfh_775
    - spfh_825
    - spfh_875
    - spfh_925
    - spfh_975
