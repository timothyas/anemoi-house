activation: GELU
num_channels: 512
cpu_offload: False
output_mask: null

model:
  _target_: anemoi.models.models.encoder_processor_decoder.AnemoiModelEncProcDec


# The GNN requires the autocast layer norm, otherwise its memory usage is too high.
# TODO: Add this to documentation.
layer_kernels:
  processor:
    LayerNorm:
      _target_: anemoi.models.layers.normalization.AutocastLayerNorm
      _partial_: True
    Linear:
      _target_: torch.nn.Linear
      _partial_: True
  encoder:
    LayerNorm:
      _target_: anemoi.models.layers.normalization.AutocastLayerNorm
      _partial_: True
    Linear:
      _target_: torch.nn.Linear
      _partial_: True
  decoder:
    LayerNorm:
      _target_: anemoi.models.layers.normalization.AutocastLayerNorm
      _partial_: True
    Linear:
      _target_: torch.nn.Linear
      _partial_: True

processor:
  _target_: anemoi.models.layers.processor.GNNProcessor
  activation: ${model.activation}
  trainable_size: ${model.trainable_parameters.hidden2hidden}
  sub_graph_edge_attributes: ${model.attributes.edges}
  num_layers: 16
  num_chunks: 2
  mlp_extra_layers: 0
  cpu_offload: ${model.cpu_offload}

encoder:
  _target_: anemoi.models.layers.mapper.GNNForwardMapper
  trainable_size: ${model.trainable_parameters.data2hidden}
  sub_graph_edge_attributes: ${model.attributes.edges}
  activation: ${model.activation}
  num_chunks: 1
  mlp_extra_layers: 0
  cpu_offload: ${model.cpu_offload}

decoder:
  _target_: anemoi.models.layers.mapper.GNNBackwardMapper
  trainable_size: ${model.trainable_parameters.hidden2data}
  sub_graph_edge_attributes: ${model.attributes.edges}
  activation: ${model.activation}
  num_chunks: 1
  mlp_extra_layers: 0
  cpu_offload: ${model.cpu_offload}


trainable_parameters:
  data: 8
  hidden: 8
  data2hidden: 8
  hidden2data: 8
  hidden2hidden: 8

attributes:
  edges:
  - edge_length
  - edge_dirs
  nodes: []

# Bounding configuration
bounding: []
